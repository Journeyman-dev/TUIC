name: AutoTest
on: [push, pull_request]
jobs:
  build:
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
        - { Name: Windows VS2019, os: windows-2019, cc: cl.exe,    cxx: cl.exe }
        - { Name: Linux GCC,      os: ubuntu-20.04, cc: gcc-10,    cxx: g++-10 }
        - { Name: Linux Clang,    os: ubuntu-20.04, cc: clang-12,  cxx: clang++-12 }
        - { Name: MacOS Clang,    os: macos-10.15,  cc: clang,     cxx: clang++  }
        build_type: [Release, Debug]
    env:
      buildDir: '${{ github.workspace }}\build'
      CC: ${{ matrix.platform.cc }}
      CXX: ${{ matrix.platform.cxx }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: log CMake version
        shell: bash
        run: cmake --version
      - name: create build enviornment
        shell: bash
        working-directory: ${{github.workspace}}
        run: cmake -E make_directory $GITHUB_WORKSPACE/build
      - uses: actions/cache@v2
        if: runner.os == 'Windows'
        with:
          path: C:\vcpkg\downloads
          key: ${{ runner.os }}-vcpkg-download-${{ matrix.os }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-download-${{ matrix.os }}-
            ${{ runner.os }}-vcpkg-download-
      - name: install catch2 with vcpkg (windows)
        if: runner.os == 'Windows'
        shell: bash
        working-directory: C:\vcpkg
        run: vcpkg install catch2:x64-windows
      - uses: actions/cache@v2
        if: runner.os == 'Linux'
        with:
          path: \usr\local\share\vcpkg\downloads
          key: ${{ runner.os }}-vcpkg-download-${{ matrix.os }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-download-${{ matrix.os }}-
            ${{ runner.os }}-vcpkg-download-
      - name: install catch2 with vcpkg (linux)
        if: runner.os == 'Linux'
        shell: bash
        working-directory: /usr/local/share/vcpkg
        run: vcpkg install catch2:x64-linux
      - uses: actions/cache@v2
        if: runner.os == 'macOS'
        with:
          path: \usr\local\share\vcpkg\downloads
          key: ${{ runner.os }}-vcpkg-download-${{ matrix.os }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-download-${{ matrix.os }}-
            ${{ runner.os }}-vcpkg-download-
      - name: install catch2 with vcpkg (macos)
        if: runner.os == 'macOS'
        shell: bash
        working-directory: /usr/local/share/vcpkg
        run: vcpkg install catch2:x64-osx
      - name: cmake build
        shell: bash
        working-directory: ${{github.workspace}}
        run: |
             vcpkg list
             cmake -S $GITHUB_WORKSPACE -B $GITHUB_WORKSPACE/build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DTUIC_BUILD_AUTO_TESTS=ON -DTUIC_OPENGL33_BACKEND=OFF -DCMAKE_TOOLCHAIN_FILE=$VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake
             cmake --build $GITHUB_WORKSPACE/build --config ${{ matrix.build_type }}
        continue-on-error: true
      - name: run tests
        shell: bash
        working-directory: ${{github.workspace}}/build/test/auto/
        run: ctest -C ${{ matrix.build_type }}
        continue-on-error: true
      - name: JUnit report
        uses: mikepenz/action-junit-report@v2.4.3
        with:
          report_paths: '**/unittests.*.xml'
          require_tests: true
          fail_on_failure: true
